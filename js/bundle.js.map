{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,+BAA+B,UAAU,MAAM,SAAS;AACxD,sDAAsD,WAAW;AACjE,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA,8DAA8D,WAAW;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,IAAI,YAAY,WAAW;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iCAAiC;AACnE,aAAa;AACb;AACA,oBAAoB;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iCAAiC;AACnE;AACA;AACA;AACA;AACA;AACA,sCAAsC,KAAK,MAAM,OAAO;AACxD,6DAA6D,MAAM;AACnE,2DAA2D,MAAM;AACjE;AACA;AACA;AACA,qEAAqE,MAAM;AAC3E;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,+EAA+E;AAC/E,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,oBAAoB;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW;AACpD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;;;;;;;;;ACxNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UCvDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,oBAAoB,mBAAO,CAAC,kDAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/sliders.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/webpack/bootstrap","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\r\n    // Calculated colories\r\n    const result = document.querySelector('.calculating__result span');\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n    // если в localStorage есть информация, то мы ее помещаем в переменные 'sex' / 'ratio'\r\n    // если там нет значения, то установим его по умолчанию и присвоим переменным    \r\n    function initLocalSettings(selector, activeClass) {\r\n        const elems = document.querySelectorAll(selector);\r\n\r\n        elems.forEach(element => {\r\n            element.classList.remove(activeClass);\r\n            if (element.getAttribute('id') === localStorage.getItem('sex')) {\r\n                element.classList.add(activeClass);\r\n            }\r\n            if (element.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                element.classList.add(activeClass);\r\n            }\r\n            // удаляем класс активности у всех элементов, перебираем их, если у элемента есть класс активности\r\n            // в localStorage - то данному элементу мы назначим класс активности\r\n        });\r\n    }\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function calcTotal() {\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '---';\r\n            return;\r\n        }\r\n\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInformation(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                    // при клике на элементы, данные сохраняютсяв локальное хранилище\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n                // если пользователь кликнул на блок с рационом(любой) мы вытаскиваем значение из data-ratio\r\n                // если клик на пол (муж/жен), то сработает else, мы получим его id (male/female) \r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activeClass);\r\n                    // перебираем все элементы у убираем у них activeClass (класс активности)\r\n                });\r\n                e.target.classList.add(activeClass);\r\n                // добавляем класс активности нужному элементу (на который кликнули)\r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getDinamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '3px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n            // если введено не число, то появится красная рамка на этом элементе,если число - ничего\r\n            switch (input.getAttribute('id')) {\r\n                // если в выбранном input id будет совпадать с case, то выполнится только он, затем break\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n            // при каждом вводе ориентируясь на id и будем записывать данные в определенные переменные\r\n            calcTotal();\r\n        });\r\n    }\r\n\r\n    getDinamicInformation('#height');\r\n    getDinamicInformation('#weight');\r\n    getDinamicInformation('#age');\r\n}\r\n\r\nmodule.exports = calc;","function cards() {\r\n    // Используем классы для создание карточек меню\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 27;\r\n            this.changeToUAH();\r\n        }\r\n\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement('div');\r\n\r\n            if (this.classes.length === 0) {\r\n                this.classes = \"menu__item\";\r\n                element.classList.add(this.classes);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n\r\n            element.innerHTML = `\r\n                    <img src=${this.src} alt=${this.alt}>\r\n                    <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                    <div class=\"menu__item-descr\">${this.descr}</div>\r\n                    <div class=\"menu__item-divider\"></div>\r\n                    <div class=\"menu__item-price\">\r\n                        <div class=\"menu__item-cost\">Цена:</div>\r\n                        <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                    </div>\r\n                `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n    const getResource = async (url) => {\r\n        const res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            // если в запросе что то пошло не так, выкинем ошибку вручную(блок catch)\r\n            throw new Error(`Could nor fetch ${url}, status: ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    };\r\n    // получаем по get запросу инфу с db.json\r\n    //     getResource('http://localhost:3000/menu')\r\n    //         .then(data => {\r\n    //             data.forEach(({img, altimg, title, descr, price}) => {\r\n    // // {} деструктуризация объекта, достаем свойства из объекта по отдельным частям\r\n    //                 new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n    //             });\r\n    //         });\r\n    // //получаем данные по ссылке,т.к. придет массив,вызовем конструктор на каждый объект массива\r\n    axios.get('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.data.forEach(({\r\n                img,\r\n                altimg,\r\n                title,\r\n                descr,\r\n                price\r\n            }) => {\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n            });\r\n        });\r\n    // создание карточки с помощью подключеной библиотеки axios\r\n\r\n\r\n    //     getResource('http://localhost:3000/menu')\r\n    //         .then(data => createCard(data));\r\n\r\n    //         function createCard(data, ) {\r\n    //             data.forEach(({img, altimg, title, descr, price}) => {\r\n    //                 const element = document.createElement('div');\r\n    //                 price = price * 27;\r\n    //                 element.classList.add('menu__item');\r\n\r\n    //                 element.innerHTML = `\r\n    //                     <img src=${img} alt=${altimg}>\r\n    //                     <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n    //                     <div class=\"menu__item-descr\">${descr}</div>\r\n    //                     <div class=\"menu__item-divider\"></div>\r\n    //                     <div class=\"menu__item-price\">\r\n    //                         <div class=\"menu__item-cost\">Цена:</div>\r\n    //                         <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\r\n    //                     </div>\r\n    //                 `;\r\n    //                 document.querySelector('.menu .container').append(element);\r\n    //             });\r\n    //         }\r\n    // // createCatd получает data, т.к. это массив, перебираем его, деструктуризируем объект на свойства\r\n    // // создает div,дает ему класс,внутрь кладет свойства которые пришли из сервера,append к элементу\r\n}\r\n\r\nmodule.exports = cards;","function forms() {\r\n        // Forms\r\n        const forms = document.querySelectorAll('form');\r\n\r\n        const message = {\r\n            loading: 'img/form/spinner.svg',\r\n            success: 'Спасибо, скоро мы с вами свяжемся',\r\n            failure: 'Что-то пошло не так...'\r\n        };\r\n    \r\n        forms.forEach(item => {\r\n            bindPostData(item);\r\n        });    \r\n        // async говорит что код асинхронный, await ставим перед той операцией которую надо дождаться\r\n        const postData = async (url, data) => {\r\n            const res = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                },\r\n                body: data\r\n            });\r\n            return await res.json();\r\n            // возвращаем promise что бы его обработать\r\n        };\r\n        //посылаем запрос(fetch) и настраиваем его, получаем его и трансформируем в Json\r\n        function bindPostData(form) {\r\n            form.addEventListener('submit', (e) => {\r\n                e.preventDefault();\r\n    \r\n                const statusMessage = document.createElement('img');\r\n                statusMessage.src = message.loading;\r\n                statusMessage.style.cssText = `\r\n                    display: block;\r\n                    margin: 0 auto;\r\n                `;\r\n                form.insertAdjacentElement('afterend', statusMessage);\r\n                // const request = new XMLHttpRequest();\r\n                // request.open('POST', 'server.php');\r\n                // request.setRequestHeader('Content-type', 'application/json');\r\n                //если XMLHttpRequest в связке с FormData, заголовок устанавливать не надо\r\n                const formData = new FormData(form);\r\n    \r\n                const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n                // получим данные с формы в виде массива с массивами, превращаем в объект, затем в JSON\r\n    \r\n                //если внутри fetch, promise попадает на ошибку которая связана с http(404, 502), не будет reject,\r\n                //а выполнится resolve, т.к запрос выполнился, reject будет при сбое сети или что то помешало\r\n    \r\n                //обращаемся к server.php(куда), метод POST запрос(как), заголовки, body(что) - это мы отправим\r\n                //говорим,что с сервера придет какой то data(пока этоне Json формат)\r\n                //выводим в data в консоль,запускаем функцию,потом удаляем спиннер \r\n                postData('http://localhost:3000/requests', json)\r\n                    //ссылку получили командой npx json-server db.json\r\n                    // .then(data => data.text()) - сейчас она происходит на 230стр(внутри POST)\r\n                    //модицифируем и говорим что data придет к нам в виде текста\r\n                    .then(data => {\r\n                        console.log(data);\r\n                        showThanksModal(message.success);\r\n                        statusMessage.remove();\r\n                        //.catch блок для ошибок,если на этапе запроса(254стр.),вызовется функция\r\n                    }).catch(() => {\r\n                        showThanksModal(message.failure);\r\n                        //.finally запускается при любом исходе, form.reset(); - очистим форму\r\n                    }).finally(() => {\r\n                        form.reset();\r\n                    });\r\n                // старый код HTTPXmlRequest\r\n                // request.addEventListener('load', () => {\r\n                //     if (request.status === 200) {\r\n                //         console.log(request.response);\r\n                //         showThanksModal(message.success);\r\n                //         form.reset();\r\n                //         statusMessage.remove();\r\n                //     } else {\r\n                //         showThanksModal(message.failure);\r\n                //     }\r\n                // });\r\n            });\r\n        }\r\n    \r\n        function showThanksModal(message) {\r\n            const prevModalDialog = document.querySelector('.modal__dialog');\r\n    \r\n            prevModalDialog.classList.add('hide');\r\n            openModal();\r\n    \r\n            const thanksModal = document.createElement('div');\r\n            thanksModal.classList.add('modal__dialog');\r\n            thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>&times;</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n            `;\r\n    \r\n            document.querySelector('.modal').append(thanksModal);\r\n            setTimeout(() => {\r\n                thanksModal.remove();\r\n                prevModalDialog.classList.add('show');\r\n                prevModalDialog.classList.remove('hide');\r\n                closeModal();\r\n            }, 4000);\r\n        }\r\n        // fetch('http://localhost:3000/menu')\r\n        // .then(data => data.json());\r\n        // .then(res => console.log(res)); \r\n}\r\n\r\nmodule.exports = forms;","function modal() {\r\n    // Modal\r\n    const modalTrigger = document.querySelectorAll('[data-modal]'),\r\n        modal = document.querySelector('.modal');\r\n\r\n    modalTrigger.forEach(btn => {\r\n        btn.addEventListener('click', openModal);\r\n    });\r\n\r\n    function closeModal() {\r\n        modal.classList.add('hide');\r\n        modal.classList.remove('show');\r\n        document.body.style.overflow = '';\r\n    }\r\n\r\n    function openModal() {\r\n        modal.classList.add('show');\r\n        modal.classList.remove('hide');\r\n        document.body.style.overflow = 'hidden';\r\n        clearInterval(modalTimerId);\r\n    }\r\n\r\n    modal.addEventListener('click', (e) => {\r\n        if (e.target === modal || e.target.getAttribute('data-close') == '') {\r\n            closeModal();\r\n        }\r\n    });\r\n\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === \"Escape\" && modal.classList.contains('show')) {\r\n            closeModal();\r\n        }\r\n    });\r\n\r\n    const modalTimerId = setTimeout(openModal, 50000);\r\n\r\n    function showModalByScroll() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            openModal();\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }\r\n    window.addEventListener('scroll', showModalByScroll);\r\n}\r\n\r\nmodule.exports = modal;","function sliders() {\r\n    // Sliders\r\n    let slideIndex = 1;\r\n    let offset = 0;\r\n    const slides = document.querySelectorAll('.offer__slide'),\r\n        // класс который определяет каждый слайд\r\n        slider = document.querySelector('.offer__slider'),\r\n        prev = document.querySelector('.offer__slider-prev'),\r\n        // стрелочка назад\r\n        next = document.querySelector('.offer__slider-next'),\r\n        // стрелочка вперед\r\n        total = document.querySelector('#total'),\r\n        current = document.querySelector('#current'),\r\n        // определяет текущещ положение в слайдере\r\n        slidesWrapper = document.querySelector('.offer__slider-wrapper'),\r\n        // общая обертка слайдов\r\n        slidesField = document.querySelector('.offer__slider-inner'),\r\n        // поле с нашими слайдами\r\n        width = window.getComputedStyle(slidesWrapper).width;\r\n    // получим свойство с шириной объекта с уже примененными к нему стилями\r\n\r\n\r\n    // Slider v.2 в html добавлен класс offer__slider-inner (в него завернули старые блоки)\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%';\r\n    // будет занимать большое кол-во простр-ва в одну строку и выстраивать слайды\r\n    // умножаем кол-во слайдов на 100% и помещаем их в slidesField\r\n    slidesField.style.display = 'flex';\r\n    // помещаем все слайды в один ряд\r\n    slidesField.style.transition = '0.5s all';\r\n    // определяем переходное состояние между ВСЕМИ (all) элементами/слайдами\r\n    slidesWrapper.style.overflow = 'hidden';\r\n    // скрываем все элементы которые не попадают в область видимости\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n        // перебираем все слайды и указываем им одинаковую ширину\r\n    });\r\n\r\n    slider.style.position = 'relative';\r\n    // все элементы внутри slider будут нормально отображаться\r\n    const indicators = document.createElement('ol'),\r\n        dots = [];\r\n    indicators.classList.add('carousel-indicators');\r\n    // создаем новый элемент и присваиваем ему новый класс(его нет в css)\r\n    indicators.style.cssText = `\r\n           position: absolute;\r\n           right: 0;\r\n           bottom: 0;\r\n           left: 0;\r\n           z-index: 15;\r\n           display: flex;\r\n           justify-content: center;\r\n           margin-right: 15%;\r\n           margin-left: 15%;\r\n           list-style: none;\r\n       `;\r\n    slider.append(indicators);\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        // к каждой точки будет устанавливаться атрибут и нумерация\r\n        dot.style.cssText = `\r\n               box-sizing: content-box;\r\n               flex: 0 1 auto;\r\n               width: 30px;\r\n               height: 6px;\r\n               margin-right: 3px;\r\n               margin-left: 3px;\r\n               cursor: pointer;\r\n               background-color: #fff;\r\n               background-clip: padding-box;\r\n               border-top: 10px solid transparent;\r\n               border-bottom: 10px solid transparent;\r\n               opacity: .5;\r\n               transition: opacity .6s ease;\r\n           `;\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n            // устанавливаем непрозрачность элемента\r\n        }\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n        // добавляем dot(наши точки в слайдере) в массив созданный ранее\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        if (offset == deleteNotDigits(width) * (slides.length - 1)) {\r\n            offset = 0;\r\n            // если отступ равен ширине одного слайда(мы долистали до конца),возвращаемся в самое начало\r\n        } else {\r\n            offset += deleteNotDigits(width);\r\n        }\r\n        // если это не последний слайд, к offset добавляется ширина еще одного слайда и слайд смещается на опред. ширину\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n        // сдвигаем слайд ВЛЕВО(-...px)\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n        // если долистали до последнего слайда, то возвращаемся к 1, если нет, то увеличиваем на единицу\r\n        numSlides();\r\n\r\n        dotsOpacity();\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if (offset == 0) {\r\n            offset = deleteNotDigits(width) * (slides.length - 1);\r\n        } else {\r\n            offset -= deleteNotDigits(width);\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        numSlides();\r\n\r\n        dotsOpacity();\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n            slideIndex = slideTo;\r\n            offset = deleteNotDigits(width) * (slideTo - 1);\r\n\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            numSlides();\r\n\r\n            dotsOpacity();\r\n        });\r\n    });\r\n\r\n    function deleteNotDigits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n    function dotsOpacity() {\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = '1';\r\n    }\r\n    // перебираем массив(точки на слайде) и устанавливаем прозрачность\r\n    function numSlides() {\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n    }\r\n    // подставляем 0, если число меньше 10, если больше, используем без 0\r\n\r\n\r\n    // Slider v.1\r\n    // showSlides(slideIndex);\r\n\r\n    // if (slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`;\r\n    // } else {\r\n    //     total.textContent = slides.length;\r\n    // }\r\n\r\n    // function showSlides(n) {\r\n    //     if (n > slides.length) {\r\n    //         slideIndex = 1;\r\n    //     }\r\n    //     // если последний слайд(правая граница) перемещаемся в самое начало слайдов\r\n    //     if (n < 1) {\r\n    //         slideIndex = slides.length;\r\n    //     }\r\n    //     // если слайд меньше 1 (максимально слева), перемещаемся в конец слайдов\r\n\r\n    //     slides.forEach((item) => item.style.display = 'none');\r\n    //     // обращаемся ко всем слайдам,перебираем их,и применяем к каждому 'none' (скрываем их)\r\n\r\n    //     slides[slideIndex - 1].style.display = 'block';\r\n    //     // -1 т.к нумерация в массиве идет с 0, а у людей с 1.устанавливаем 'block', делаем видимым\r\n\r\n    //     if (slides.length < 10) {\r\n    //         current.textContent = `0${slideIndex}`;\r\n    //     } else {\r\n    //         current.textContent = slideIndex;\r\n    //     }\r\n    // }\r\n\r\n    // function plusSlides(n) {\r\n    //     showSlides(slideIndex += n);\r\n    // }\r\n    // // вызываем функцию showSlides, если n = 1 то прибавляем, если -1 то отнимаем от значения,и вызываем функцию\r\n\r\n    // prev.addEventListener('click', () => {\r\n    //     plusSlides(-1);\r\n    // });\r\n\r\n    // next.addEventListener('click', () => {\r\n    //     plusSlides(1);\r\n    // });\r\n}\r\n\r\nmodule.exports = sliders;","function tabs() {\r\n    // Tabs\r\n    let tabs = document.querySelectorAll('.tabheader__item'),\r\n        tabsContent = document.querySelectorAll('.tabcontent'),\r\n        tabsParent = document.querySelector('.tabheader__items');\r\n\r\n    function hideTabContent() {\r\n\r\n        tabsContent.forEach(item => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove('tabheader__item_active');\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) {\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add('tabheader__item_active');\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsParent.addEventListener('click', function (event) {\r\n        const target = event.target;\r\n        if (target && target.classList.contains('tabheader__item')) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = tabs;","function timer() {\r\n    // Timer\r\n    const deadline = '2021-09-11';\r\n\r\n    function getTimeRemaining(endtime) {\r\n        const t = Date.parse(endtime) - Date.parse(new Date()),\r\n            days = Math.floor((t / (1000 * 60 * 60 * 24))),\r\n            seconds = Math.floor((t / 1000) % 60),\r\n            minutes = Math.floor((t / 1000 / 60) % 60),\r\n            hours = Math.floor((t / (1000 * 60 * 60) % 24));\r\n\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n\r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return '0' + num;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) {\r\n\r\n        const timer = document.querySelector(selector),\r\n            days = timer.querySelector(\"#days\"),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            timeInterval = setInterval(updateClock, 1000);\r\n\r\n        updateClock();\r\n\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n    setClock('.timer', deadline);\r\n}\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","window.addEventListener('DOMContentLoaded', function () {\n    const tabs = require('./modules/tabs'),\n          modal = require('./modules/modal'),\n          timer = require('./modules/timer'),\n          cards = require('./modules/cards'),\n          calc = require('./modules/calc'),\n          forms = require('./modules/forms'),\n          sliders = require('./modules/sliders');\n    \n          tabs();\n          modal();\n          timer();\n          cards();\n          calc();\n          forms();\n          sliders();\n});"],"names":[],"sourceRoot":""}